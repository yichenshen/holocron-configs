# Set in-memory cache-metadata size in keys_zone, size of video caching and how many days a cached object should persist
proxy_cache_path /var/cache/nginx/jellyfin-videos levels=1:2 keys_zone=jellyfin-videos:100m inactive=90d max_size=35000m;
proxy_cache_path /var/cache/nginx/jellyfin levels=1:2 keys_zone=jellyfin:100m max_size=15g inactive=30d use_temp_path=off;
map $request_uri $h264Level { ~(h264-level=)(.+?)& $2; }
map $request_uri $h264Profile { ~(h264-profile=)(.+?)& $2; }

upstream jellyfin_backend {
	server 127.0.0.1:8096;
	keepalive 32;
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;
	listen 443 quic;
	listen [::]:443 quic;

	server_name jellyfin.ycholocron.com;

	include /etc/nginx/default.d/*.conf;

	# Some players don't reopen a socket and playback stops totally instead of
	# resuming after an extended pause (e.g. Chrome)
	send_timeout 100m;

	# Nginx default client_max_body_size is 1MB, increase in case of uploades.
	client_max_body_size 100M;

	# Permissions policy. May cause issues on some clients
  add_header Permissions-Policy "accelerometer=(), ambient-light-sensor=(), battery=(), bluetooth=(), camera=(), clipboard-read=(), display-capture=(), document-domain=(), encrypted-media=(), gamepad=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), interest-cohort=(), keyboard-map=(), local-fonts=(), magnetometer=(), microphone=(), payment=(), publickey-credentials-get=(), serial=(), sync-xhr=(), usb=(), xr-spatial-tracking=()" always;

	location = / {
			return 302 https://$host/web/;
	}

	location / {
			# Proxy main Jellyfin traffic
			proxy_pass http://jellyfin_backend;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Protocol $scheme;
			proxy_set_header X-Forwarded-Host $http_host;

			# Disable buffering when the nginx proxy gets very resource heavy upon streaming
			proxy_buffering off;
	}

	# location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/
	location = /web/ {
			# Proxy main Jellyfin traffic
			proxy_pass http://jellyfin_backend/web/index.html;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Protocol $scheme;
			proxy_set_header X-Forwarded-Host $http_host;
	}

	location /socket {
			# Proxy Jellyfin Websockets traffic
			proxy_pass http://jellyfin_backend;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Protocol $scheme;
			proxy_set_header X-Forwarded-Host $http_host;
	}

	location ~* ^/Videos/(.*)/(?!live) {
		# Set size of a slice (this amount will be always requested from the backend by nginx)
		# Higher value means more latency, lower more overhead
		# This size is independent of the size clients/browsers can request
		slice 2m;

		proxy_cache jellyfin-videos;
		proxy_cache_valid 200 206 301 302 30d;
		proxy_ignore_headers Expires Cache-Control Set-Cookie X-Accel-Expires;
		proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
		proxy_connect_timeout 15s;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
		# Transmit slice range to the backend
		proxy_set_header Range $slice_range;

		# This saves bandwidth between the proxy and jellyfin, as a file is only downloaded one time instead of multiple times when multiple clients want to at the same time
		# The first client will trigger the download, the other clients will have to wait until the slice is cached
		# Esp. practical during SyncPlay
		proxy_cache_lock on;
		proxy_cache_lock_age 60s;

		proxy_pass http://jellyfin_backend;
		proxy_cache_key "jellyvideo$uri?MediaSourceId=$arg_MediaSourceId&VideoCodec=$arg_VideoCodec&AudioCodec=$arg_AudioCodec&AudioStreamIndex=$arg_AudioStreamIndex&VideoBitrate=$arg_VideoBitrate&AudioBitrate=$arg_AudioBitrate&SubtitleMethod=$arg_SubtitleMethod&TranscodingMaxAudioChannels=$arg_TranscodingMaxAudioChannels&RequireAvc=$arg_RequireAvc&SegmentContainer=$arg_SegmentContainer&MinSegments=$arg_MinSegments&BreakOnNonKeyFrames=$arg_BreakOnNonKeyFrames&h264-profile=$h264Profile&h264-level=$h264Level&slicerange=$slice_range";
	}

	location ~ /Items/(.*)/Images {
		proxy_pass http://jellyfin_backend;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Protocol $scheme;
		proxy_set_header X-Forwarded-Host $http_host;

		proxy_cache jellyfin;
		proxy_cache_revalidate on;
		proxy_cache_lock on;
	}
}
