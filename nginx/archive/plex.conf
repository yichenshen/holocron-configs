#Upstream to Plex
upstream plex_backend {
  server 127.0.0.1:32400;
  keepalive 32;
}

server {
	listen      443 ssl http2;
  listen      [::]:443 ssl http2;
	server_name plex.ycholocron.com;

  include /etc/nginx/default.d/*.conf;

  # Some players don't reopen a socket and playback stops totally instead of
  # resuming after an extended pause (e.g. Chrome)
	send_timeout 100m;

	# Nginx default client_max_body_size is 1MB, which breaks Camera Upload feature
  # from the phones.
	# Increasing the limit fixes the issue. Anyhow, if 4K videos are expected to
  # be uploaded, the size might need to be increased even more
	client_max_body_size 100M;

	# Forward real ip and host to Plex
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	# When using ngx_http_realip_module change $proxy_add_x_forwarded_for to
  # '$http_x_forwarded_for,$realip_remote_addr'
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;

	# Websockets
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";

  # Disables compression between Plex and Nginx, required if using sub_filter below.
	# May also improve loading time by a very marginal amount, as nginx will
  # compress anyway.
  proxy_set_header Accept-Encoding "";

	# Buffering off send to the client as soon as the data is received from Plex.
	proxy_redirect off;
	proxy_buffering off;

	location / {
		# Example of using sub_filter to alter what Plex displays, this disables Plex News.
		# sub_filter ',news,' ',';
		# sub_filter_once on;
		# sub_filter_types text/xml;
		proxy_pass http://plex_backend;
	}

	# PlexPy forward example, works the same for other services.
	# location /plexpy {
	#   proxy_pass http://127.0.0.1:8181;
	# }
}
